<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="AlarmPictureBox.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>